import { readdirSync, readFileSync, writeFileSync } from 'node:fs';
import { minify } from 'minify';
import { join } from 'node:path';


let headerFile = '//This file is autogenerated\n#pragma once\n';
const headerFilePath = join(import.meta.dirname, '../include/websites.h');

const files = readdirSync('./sites');

for (const file of files) {
    console.log(join(import.meta.dirname, 'sites', file));
    try {
        // const result = await minify(join(import.meta.dirname, 'sites', file));
        const [filename, extension] = file.split('.');
        headerFile += `const char ${extension.toUpperCase()}_${filename.toUpperCase()}[] = R"(${readFileSync(join(import.meta.dirname, 'sites', file)).toString()})";\n`;
    } catch (error) {
        console.error(`Could not minify ${file}`);
    }
}

writeFileSync(headerFilePath, headerFile);